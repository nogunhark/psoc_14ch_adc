C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\3.2\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe .\main
                    -.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(DEBUG) WL(2) PR(.\DP8051\DP8051_Keil_9
                    -51\Debug/main.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include <project.h>
  13          #include <stdio.h>
  14          #define CHANNEL_1           (0x00)
  15          #define CHANNEL_2           (0x01)
  16          #define CHANNEL_3           (0x02)
  17          #define CHANNEL_4           (0x03)
  18          
  19          
  20          
  21          
  22          /* Global variables */
  23          volatile uint8  dataReady;
  24          void RegWordTo2ByteSave( unsigned short, unsigned int);
  25          unsigned short Reg2ByteToWordLoad(int16 *TgtAdd );
  26          void Hex_2_Ascii(uint8 hex);
  27          
  28          uint32 ms_count = 0;
  29          uint32 CH_Ini = 0x01;
  30          uint16 timer_tick0=0; 
  31          
  32          uint32 i=0, j=0;
  33          
  34          uint8 ch[] = {'1','2','3','4','5','6','7','8','9','A','B','C','D','E'};
  35          
  36          uint8 rx_buf[256];
  37          
  38          
  39          void write (uint8* buf);
  40          int hex_print( unsigned short);
  41          
  42          CY_ISR(MY_ISR) {
  43   1              timer_tick0 ++;
  44   1      }
  45          char putchar(char c)
  46          {
  47   1              // UART_PutChar(c);
  48   1              UART_PutChar(c);
  49   1              return c;
  50   1      }
  51          
  52          
  53          
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 2   

  54          
  55          void main()
  56          
  57          { 
  58   1          Timer_Start();
  59   1          UART_Start();
  60   1      
  61   1          CyGlobalIntEnable;
  62   1          
  63   1          ADC_Start();
  64   1          isr_1_StartEx(MY_ISR);
  65   1          ADC_StartConvert();
  66   1          
  67   1          for(;;)
  68   1          {
  69   2              
  70   2              if(timer_tick0 == 1000)
  71   2              {
  72   3                  timer_tick0 = 0;
  73   3                    ADC_StopConvert();
  74   3                    CyDelay(1);
  75   3                    Control_Write(i);
  76   3                    CyDelay(10);
  77   3                    ADC_StartConvert();
  78   3                    while (Status_Read() == 0x00)
  79   3                   {
  80   4                   }
  81   3                  UART_PutChar(ch[i]);
  82   3                  UART_PutString(" : ");
  83   3                  write(&rx_buf[j]);
  84   3                  
  85   3                  Hex_2_Ascii(rx_buf[j]);
  86   3                  Hex_2_Ascii(rx_buf[j+1]);
  87   3                  UART_PutString("\n\r");
  88   3                  
  89   3                  if(j == 28)
  90   3                  {
  91   4                      j=0;
  92   4                  }
  93   3                  j+=2;
  94   3      
  95   3                  if(++i == 14)
  96   3                  {
  97   4                      i=0;
  98   4                  }
  99   3              }
 100   2             
 101   2              /*if (timer_tick0 == 1000)
 102   2              {
 103   2                 
 104   2                   //CH_Ini  =CHANNEL_1;
 105   2                  
 106   2                   // UART_PutString("\n\r port 1\n\r");
 107   2                    ADC_StopConvert();
 108   2                    CyDelay(1);
 109   2                    Control_Write(ch);
 110   2                    CyDelay(10);
 111   2                    ADC_StartConvert();
 112   2                    while (Status_Read() == 0x00)
 113   2                   {
 114   2                   }
 115   2                
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 3   

 116   2                   write();
 117   2                  //timer_tick0 =0 ;
 118   2                  
 119   2                  ch++;
 120   2                      }
 121   2              
 122   2                      else if (timer_tick0 == 2000)
 123   2              {
 124   2                   
 125   2                  ADC_StopConvert();
 126   2                    CyDelay(1);
 127   2                    Control_Write(ch);
 128   2                    CyDelay(10);
 129   2                    ADC_StartConvert();
 130   2                    while (Status_Read() == 0x00)
 131   2                   {
 132   2                   }
 133   2                
 134   2                   write();
 135   2                  //timer_tick0 =0 ;
 136   2                  
 137   2                  ch++;
 138   2      
 139   2                      }
 140   2                      else if (timer_tick0 == 3000)
 141   2              {
 142   2                   
 143   2                   ADC_StopConvert();
 144   2                    CyDelay(1);
 145   2                    Control_Write(ch);
 146   2                    CyDelay(10);
 147   2                    ADC_StartConvert();
 148   2                    while (Status_Read() == 0x00)
 149   2                   {
 150   2                   }
 151   2                
 152   2                   write();
 153   2                  //timer_tick0 =0 ;
 154   2                  
 155   2                  ch++;
 156   2                      }
 157   2                      else if (timer_tick0 == 4000)
 158   2              {
 159   2                 
 160   2                   ADC_StopConvert();
 161   2                    CyDelay(1);
 162   2                    Control_Write(ch);
 163   2                    CyDelay(10);
 164   2                    ADC_StartConvert();
 165   2                    while (Status_Read() == 0x00)
 166   2                   {
 167   2                   }
 168   2                
 169   2                   write();
 170   2                  //timer_tick0 =0 ;
 171   2                  
 172   2                  ch++;
 173   2                      }
 174   2              else if (timer_tick0 == 4000)
 175   2              {
 176   2                 
 177   2                  CH_Ini  =CHANNEL_4;
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 4   

 178   2                 
 179   2                  UART_PutString("\n\r port 4\n\r");
 180   2                   ADC_StopConvert();
 181   2                  CyDelay(1);
 182   2                  Control_Write(ch);
 183   2                  CyDelay(10);
 184   2                   ADC_StartConvert();
 185   2                  while (Status_Read() == 0x00)
 186   2                   {
 187   2                   }
 188   2                     write();
 189   2                      }*/
 190   2              
 191   2              
 192   2      
 193   2          }
 194   1       }   
 195              
 196          void write (uint8* buf)
 197          { 
 198   1          int16 dec;
 199   1          uint16 MASK = 0x00FF;
 200   1          uint8 hex[2];
 201   1      
 202   1          char Outputstring1[32]; 
 203   1          float VII;
 204   1          
 205   1          dec=ADC_GetResult16();
 206   1          
 207   1          hex[0] = (dec>>8)&MASK;
 208   1          hex[1] = dec&MASK;
 209   1          
 210   1          buf[0] = hex[0];
 211   1          buf[1] = hex[1];
 212   1      
 213   1      }
*** WARNING C280 IN LINE 202 OF .\main.c: 'Outputstring1': unreferenced local variable
*** WARNING C280 IN LINE 203 OF .\main.c: 'VII': unreferenced local variable
 214          
 215          void RegWordTo2ByteSave( unsigned short d, unsigned int *TgtAdd )
 216          {
*** WARNING C235 IN LINE 216 OF .\main.c: parameter 2: different types
 217   1              unsigned int    * d1;
 218   1      
 219   1              d1 = (unsigned int *)&d;
 220   1              TgtAdd[1] = d1[0];
 221   1              TgtAdd[0] = d1[1];
 222   1              
 223   1              return;
 224   1      }
 225          
 226          unsigned short Reg2ByteToWordLoad(int8 *TgtAdd )
 227          {
*** WARNING C235 IN LINE 227 OF .\main.c: parameter 1: different types
 228   1              unsigned short d;
 229   1              unsigned int* d1;
 230   1      
 231   1              d1 = (unsigned int *)&d;
 232   1              d1[0] = TgtAdd[1];
 233   1              d1[1] = TgtAdd[0];
 234   1              return d;
 235   1      }
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 5   

 236          
 237          void Hex_2_Ascii(uint8 hex)
 238          {
 239   1          uint8 U_temp=0;
 240   1          uint8 Ascii[16] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
 241   1          uint8 MASK=0x0F;
 242   1          
 243   1          U_temp = (hex>>4)&MASK;
 244   1          UART_PutChar(Ascii[U_temp]);
 245   1          U_temp = (hex)&MASK;
 246   1          UART_PutChar(Ascii[U_temp]);
 247   1      }
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION MY_ISR (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C085              PUSH    DPH1
000A C084              PUSH    DPL1
000C C086              PUSH    DPS
000E 758600            MOV     DPS,#00H
0011 C000        E     PUSH    ?C?XPAGE1SFR
0013 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0016 C0D0              PUSH    PSW
0018 75D000            MOV     PSW,#00H
001B C000              PUSH    AR0
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
001D 900000      R     MOV     DPTR,#timer_tick0
0020 E4                CLR     A
0021 75F001            MOV     B,#01H
0024 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 44
0027 D000              POP     AR0
0029 D0D0              POP     PSW
002B D000        E     POP     ?C?XPAGE1SFR
002D D086              POP     DPS
002F D084              POP     DPL1
0031 D085              POP     DPH1
0033 D082              POP     DPL
0035 D083              POP     DPH
0037 D0F0              POP     B
0039 D0E0              POP     ACC
003B 32                RETI    
             ; FUNCTION MY_ISR (END)

             ; FUNCTION _putchar (BEGIN)
                                           ; SOURCE LINE # 45
0000 900000      R     MOV     DPTR,#c
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 48
0005 900000      R     MOV     DPTR,#c
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 120000      E     LCALL   _UART_PutChar
                                           ; SOURCE LINE # 49
000D 900000      R     MOV     DPTR,#c
0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
                                           ; SOURCE LINE # 50
0012         ?C0002:
0012 22                RET     
             ; FUNCTION _putchar (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
0000 120000      E     LCALL   Timer_Start
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 7   

                                           ; SOURCE LINE # 59
0003 120000      E     LCALL   UART_Start
                                           ; SOURCE LINE # 61
0006 D2AF              SETB    EA
0008 9044F4            MOV     DPTR,#044F4H
000B 74FD              MOV     A,#0FDH
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 63
000E 120000      E     LCALL   ADC_Start
                                           ; SOURCE LINE # 64
0011 7E00        R     MOV     R6,#HIGH MY_ISR
0013 7F00        R     MOV     R7,#LOW MY_ISR
0015 120000      E     LCALL   _isr_1_StartEx
                                           ; SOURCE LINE # 65
0018 120000      E     LCALL   ADC_StartConvert
                                           ; SOURCE LINE # 67
001B         ?C0003:
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 70
001B 900000      R     MOV     DPTR,#timer_tick0
001E E0                MOVX    A,@DPTR
001F FE                MOV     R6,A
0020 A3                INC     DPTR
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 EF                MOV     A,R7
0024 B4E8F4            CJNE    A,#0E8H,?C0003
0027 EE                MOV     A,R6
0028 B403F0            CJNE    A,#03H,?C0003
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
002B 900000      R     MOV     DPTR,#timer_tick0
002E E4                CLR     A
002F F0                MOVX    @DPTR,A
0030 A3                INC     DPTR
0031 E4                CLR     A
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 73
0033 120000      E     LCALL   ADC_StopConvert
                                           ; SOURCE LINE # 74
0036 7F01              MOV     R7,#01H
0038 7E00              MOV     R6,#00H
003A 7D00              MOV     R5,#00H
003C 7C00              MOV     R4,#00H
003E 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 75
0041 900000      R     MOV     DPTR,#i
0044 120000      E     LCALL   ?C?LLDXDATA
0047 120000      E     LCALL   _Control_Write
                                           ; SOURCE LINE # 76
004A 7F0A              MOV     R7,#0AH
004C 7E00              MOV     R6,#00H
004E 7D00              MOV     R5,#00H
0050 7C00              MOV     R4,#00H
0052 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 77
0055 120000      E     LCALL   ADC_StartConvert
0058         ?C0006:
                                           ; SOURCE LINE # 78
0058 120000      E     LCALL   Status_Read
005B EF                MOV     A,R7
005C 60FA              JZ      ?C0006
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 8   

                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
005E         ?C0007:
                                           ; SOURCE LINE # 81
005E 900000      R     MOV     DPTR,#i
0061 120000      E     LCALL   ?C?LLDXDATA
0064 7400        R     MOV     A,#LOW ch
0066 2F                ADD     A,R7
0067 F582              MOV     DPL,A
0069 E4                CLR     A
006A 3400        R     ADDC    A,#HIGH ch
006C F583              MOV     DPH,A
006E E0                MOVX    A,@DPTR
006F FF                MOV     R7,A
0070 120000      E     LCALL   _UART_PutChar
                                           ; SOURCE LINE # 82
0073 7BFF              MOV     R3,#0FFH
0075 7A00        R     MOV     R2,#HIGH ?SC_0
0077 7900        R     MOV     R1,#LOW ?SC_0
0079 120000      E     LCALL   _UART_PutString
                                           ; SOURCE LINE # 83
007C 900000      R     MOV     DPTR,#j
007F 120000      E     LCALL   ?C?LLDXDATA
0082 7400        R     MOV     A,#LOW rx_buf
0084 2F                ADD     A,R7
0085 F9                MOV     R1,A
0086 E4                CLR     A
0087 3400        R     ADDC    A,#HIGH rx_buf
0089 FA                MOV     R2,A
008A 7B01              MOV     R3,#01H
008C 120000      R     LCALL   _write
                                           ; SOURCE LINE # 85
008F 900000      R     MOV     DPTR,#j
0092 120000      E     LCALL   ?C?LLDXDATA
0095 7400        R     MOV     A,#LOW rx_buf
0097 2F                ADD     A,R7
0098 F582              MOV     DPL,A
009A E4                CLR     A
009B 3400        R     ADDC    A,#HIGH rx_buf
009D F583              MOV     DPH,A
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 120000      R     LCALL   _Hex_2_Ascii
                                           ; SOURCE LINE # 86
00A4 900000      R     MOV     DPTR,#j
00A7 120000      E     LCALL   ?C?LLDXDATA
00AA 7400        R     MOV     A,#LOW rx_buf+01H
00AC 2F                ADD     A,R7
00AD F582              MOV     DPL,A
00AF E4                CLR     A
00B0 3400        R     ADDC    A,#HIGH rx_buf+01H
00B2 F583              MOV     DPH,A
00B4 E0                MOVX    A,@DPTR
00B5 FF                MOV     R7,A
00B6 120000      R     LCALL   _Hex_2_Ascii
                                           ; SOURCE LINE # 87
00B9 7BFF              MOV     R3,#0FFH
00BB 7A00        R     MOV     R2,#HIGH ?SC_4
00BD 7900        R     MOV     R1,#LOW ?SC_4
00BF 120000      E     LCALL   _UART_PutString
                                           ; SOURCE LINE # 89
00C2 7F1C              MOV     R7,#01CH
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 9   

00C4 7E00              MOV     R6,#00H
00C6 7D00              MOV     R5,#00H
00C8 7C00              MOV     R4,#00H
00CA 900000      R     MOV     DPTR,#j
00CD 120000      E     LCALL   ?C?LLDXDATA0
00D0 C3                CLR     C
00D1 120000      E     LCALL   ?C?ULCMP
00D4 700E              JNZ     ?C0008
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
00D6 7F00              MOV     R7,#00H
00D8 7E00              MOV     R6,#00H
00DA 7D00              MOV     R5,#00H
00DC 7C00              MOV     R4,#00H
00DE 900000      R     MOV     DPTR,#j
00E1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 92
00E4         ?C0008:
                                           ; SOURCE LINE # 93
00E4 900000      R     MOV     DPTR,#j
00E7 120000      E     LCALL   ?C?LLDXDATA
00EA EF                MOV     A,R7
00EB 2402              ADD     A,#02H
00ED FF                MOV     R7,A
00EE EE                MOV     A,R6
00EF 3400              ADDC    A,#00H
00F1 FE                MOV     R6,A
00F2 ED                MOV     A,R5
00F3 3400              ADDC    A,#00H
00F5 FD                MOV     R5,A
00F6 EC                MOV     A,R4
00F7 3400              ADDC    A,#00H
00F9 FC                MOV     R4,A
00FA 900000      R     MOV     DPTR,#j
00FD 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 95
0100 900000      R     MOV     DPTR,#i
0103 120000      E     LCALL   ?C?LILDXDATA1
0106 7B0E              MOV     R3,#0EH
0108 7A00              MOV     R2,#00H
010A 7900              MOV     R1,#00H
010C 7800              MOV     R0,#00H
010E C3                CLR     C
010F 120000      E     LCALL   ?C?ULCMP
0112 6003              JZ      $ + 5H
0114 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
0117 7F00              MOV     R7,#00H
0119 7E00              MOV     R6,#00H
011B 7D00              MOV     R5,#00H
011D 7C00              MOV     R4,#00H
011F 900000      R     MOV     DPTR,#i
0122 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 193
0125 020000      R     LJMP    ?C0003
0128 22                RET     
             ; FUNCTION main (END)

             ; FUNCTION _write (BEGIN)
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 10  

                                           ; SOURCE LINE # 196
0000 900000      R     MOV     DPTR,#buf
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 199
0006 900000      R     MOV     DPTR,#MASK
0009 E4                CLR     A
000A F0                MOVX    @DPTR,A
000B A3                INC     DPTR
000C 74FF              MOV     A,#0FFH
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
000F 120000      E     LCALL   ADC_GetResult16
0012 900000      R     MOV     DPTR,#dec
0015 EE                MOV     A,R6
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
0018 EF                MOV     A,R7
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
001A 900000      R     MOV     DPTR,#dec
001D E0                MOVX    A,@DPTR
001E FE                MOV     R6,A
001F A3                INC     DPTR
0020 E0                MOVX    A,@DPTR
0021 FF                MOV     R7,A
0022 EE                MOV     A,R6
0023 FF                MOV     R7,A
0024 33                RLC     A
0025 95E0              SUBB    A,ACC
0027 FE                MOV     R6,A
0028 900000      R     MOV     DPTR,#MASK
002B E0                MOVX    A,@DPTR
002C FC                MOV     R4,A
002D A3                INC     DPTR
002E E0                MOVX    A,@DPTR
002F FD                MOV     R5,A
0030 AE05              MOV     R6,AR5
0032 EF                MOV     A,R7
0033 5E                ANL     A,R6
0034 FF                MOV     R7,A
0035 900000      R     MOV     DPTR,#hex
0038 EF                MOV     A,R7
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 208
003A 900000      R     MOV     DPTR,#MASK
003D E0                MOVX    A,@DPTR
003E FE                MOV     R6,A
003F A3                INC     DPTR
0040 E0                MOVX    A,@DPTR
0041 FF                MOV     R7,A
0042 900000      R     MOV     DPTR,#dec
0045 E0                MOVX    A,@DPTR
0046 FC                MOV     R4,A
0047 A3                INC     DPTR
0048 E0                MOVX    A,@DPTR
0049 FD                MOV     R5,A
004A AE05              MOV     R6,AR5
004C EE                MOV     A,R6
004D 5F                ANL     A,R7
004E FF                MOV     R7,A
004F 900000      R     MOV     DPTR,#hex+01H
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 11  

0052 EF                MOV     A,R7
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 210
0054 900000      R     MOV     DPTR,#hex
0057 E0                MOVX    A,@DPTR
0058 FF                MOV     R7,A
0059 900000      R     MOV     DPTR,#buf
005C 120000      E     LCALL   ?C?PLDXDATA
005F EF                MOV     A,R7
0060 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 211
0063 900000      R     MOV     DPTR,#hex+01H
0066 E0                MOVX    A,@DPTR
0067 FF                MOV     R7,A
0068 900000      R     MOV     DPTR,#buf
006B 120000      E     LCALL   ?C?PLDXDATA
006E E9                MOV     A,R1
006F 2401              ADD     A,#01H
0071 F9                MOV     R1,A
0072 EA                MOV     A,R2
0073 3400              ADDC    A,#00H
0075 FA                MOV     R2,A
0076 EF                MOV     A,R7
0077 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 213
007A 22                RET     
             ; FUNCTION _write (END)

             ; FUNCTION _RegWordTo2ByteSave (BEGIN)
                                           ; SOURCE LINE # 215
0000 900000      R     MOV     DPTR,#d
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
0008 900000      R     MOV     DPTR,#TgtAdd
000B 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 219
000E 7B01              MOV     R3,#01H
0010 7A00        R     MOV     R2,#HIGH d
0012 7900        R     MOV     R1,#LOW d
0014 900000      R     MOV     DPTR,#d1
0017 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 220
001A 900000      R     MOV     DPTR,#d1
001D 120000      E     LCALL   ?C?PLDXDATA
0020 120000      E     LCALL   ?C?ILDPTR
0023 FF                MOV     R7,A
0024 AEF0              MOV     R6,B
0026 900000      R     MOV     DPTR,#TgtAdd
0029 120000      E     LCALL   ?C?PLDXDATA
002C E9                MOV     A,R1
002D 2402              ADD     A,#02H
002F F9                MOV     R1,A
0030 EA                MOV     A,R2
0031 3400              ADDC    A,#00H
0033 FA                MOV     R2,A
0034 EE                MOV     A,R6
0035 8FF0              MOV     B,R7
0037 120000      E     LCALL   ?C?ISTPTR
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 12  

                                           ; SOURCE LINE # 221
003A 900000      R     MOV     DPTR,#d1
003D 120000      E     LCALL   ?C?PLDXDATA
0040 E9                MOV     A,R1
0041 2402              ADD     A,#02H
0043 F9                MOV     R1,A
0044 EA                MOV     A,R2
0045 3400              ADDC    A,#00H
0047 FA                MOV     R2,A
0048 120000      E     LCALL   ?C?ILDPTR
004B FF                MOV     R7,A
004C AEF0              MOV     R6,B
004E 900000      R     MOV     DPTR,#TgtAdd
0051 120000      E     LCALL   ?C?PLDXDATA
0054 EE                MOV     A,R6
0055 8FF0              MOV     B,R7
0057 120000      E     LCALL   ?C?ISTPTR
                                           ; SOURCE LINE # 224
005A         ?C0012:
005A 22                RET     
             ; FUNCTION _RegWordTo2ByteSave (END)

             ; FUNCTION _Reg2ByteToWordLoad (BEGIN)
                                           ; SOURCE LINE # 226
0000 900000      R     MOV     DPTR,#TgtAdd
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 231
0006 7B01              MOV     R3,#01H
0008 7A00        R     MOV     R2,#HIGH d
000A 7900        R     MOV     R1,#LOW d
000C 900000      R     MOV     DPTR,#d1
000F 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 232
0012 900000      R     MOV     DPTR,#TgtAdd
0015 120000      E     LCALL   ?C?PLDXDATA
0018 E9                MOV     A,R1
0019 2401              ADD     A,#01H
001B F9                MOV     R1,A
001C EA                MOV     A,R2
001D 3400              ADDC    A,#00H
001F FA                MOV     R2,A
0020 120000      E     LCALL   ?C?CLDPTR
0023 FF                MOV     R7,A
0024 EF                MOV     A,R7
0025 33                RLC     A
0026 95E0              SUBB    A,ACC
0028 FE                MOV     R6,A
0029 900000      R     MOV     DPTR,#d1
002C 120000      E     LCALL   ?C?PLDXDATA
002F EE                MOV     A,R6
0030 8FF0              MOV     B,R7
0032 120000      E     LCALL   ?C?ISTPTR
                                           ; SOURCE LINE # 233
0035 900000      R     MOV     DPTR,#TgtAdd
0038 120000      E     LCALL   ?C?PLDXDATA
003B 120000      E     LCALL   ?C?CLDPTR
003E FF                MOV     R7,A
003F EF                MOV     A,R7
0040 33                RLC     A
0041 95E0              SUBB    A,ACC
0043 FE                MOV     R6,A
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 13  

0044 900000      R     MOV     DPTR,#d1
0047 120000      E     LCALL   ?C?PLDXDATA
004A E9                MOV     A,R1
004B 2402              ADD     A,#02H
004D F9                MOV     R1,A
004E EA                MOV     A,R2
004F 3400              ADDC    A,#00H
0051 FA                MOV     R2,A
0052 EE                MOV     A,R6
0053 8FF0              MOV     B,R7
0055 120000      E     LCALL   ?C?ISTPTR
                                           ; SOURCE LINE # 234
0058 900000      R     MOV     DPTR,#d
005B E0                MOVX    A,@DPTR
005C FE                MOV     R6,A
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F FF                MOV     R7,A
                                           ; SOURCE LINE # 235
0060         ?C0013:
0060 22                RET     
             ; FUNCTION _Reg2ByteToWordLoad (END)

             ; FUNCTION _Hex_2_Ascii (BEGIN)
                                           ; SOURCE LINE # 237
0000 900000      R     MOV     DPTR,#hex
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
0005 900000      R     MOV     DPTR,#U_temp
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 240
000A 7BFF              MOV     R3,#0FFH
000C 7A00        R     MOV     R2,#HIGH _?ix1000
000E 7900        R     MOV     R1,#LOW _?ix1000
0010 C003              PUSH    AR3
0012 C002              PUSH    AR2
0014 C001              PUSH    AR1
0016 7B01              MOV     R3,#01H
0018 7A00        R     MOV     R2,#HIGH Ascii
001A 7900        R     MOV     R1,#LOW Ascii
001C A801              MOV     R0,AR1
001E AC02              MOV     R4,AR2
0020 AD03              MOV     R5,AR3
0022 D001              POP     AR1
0024 D002              POP     AR2
0026 D003              POP     AR3
0028 7E00              MOV     R6,#00H
002A 7F10              MOV     R7,#010H
002C 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 241
002F 900000      R     MOV     DPTR,#MASK
0032 740F              MOV     A,#0FH
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 243
0035 900000      R     MOV     DPTR,#hex
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B C4                SWAP    A
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 14  

003C 540F              ANL     A,#0FH
003E FF                MOV     R7,A
003F 900000      R     MOV     DPTR,#MASK
0042 E0                MOVX    A,@DPTR
0043 FE                MOV     R6,A
0044 EF                MOV     A,R7
0045 5E                ANL     A,R6
0046 FF                MOV     R7,A
0047 900000      R     MOV     DPTR,#U_temp
004A EF                MOV     A,R7
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 244
004C 900000      R     MOV     DPTR,#U_temp
004F E0                MOVX    A,@DPTR
0050 FF                MOV     R7,A
0051 7400        R     MOV     A,#LOW Ascii
0053 2F                ADD     A,R7
0054 F582              MOV     DPL,A
0056 E4                CLR     A
0057 3400        R     ADDC    A,#HIGH Ascii
0059 F583              MOV     DPH,A
005B E0                MOVX    A,@DPTR
005C FF                MOV     R7,A
005D 120000      E     LCALL   _UART_PutChar
                                           ; SOURCE LINE # 245
0060 900000      R     MOV     DPTR,#MASK
0063 E0                MOVX    A,@DPTR
0064 FF                MOV     R7,A
0065 900000      R     MOV     DPTR,#hex
0068 E0                MOVX    A,@DPTR
0069 FE                MOV     R6,A
006A EE                MOV     A,R6
006B 5F                ANL     A,R7
006C FF                MOV     R7,A
006D 900000      R     MOV     DPTR,#U_temp
0070 EF                MOV     A,R7
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 246
0072 900000      R     MOV     DPTR,#U_temp
0075 E0                MOVX    A,@DPTR
0076 FF                MOV     R7,A
0077 7400        R     MOV     A,#LOW Ascii
0079 2F                ADD     A,R7
007A F582              MOV     DPL,A
007C E4                CLR     A
007D 3400        R     ADDC    A,#HIGH Ascii
007F F583              MOV     DPH,A
0081 E0                MOVX    A,@DPTR
0082 FF                MOV     R7,A
0083 120000      E     LCALL   _UART_PutChar
                                           ; SOURCE LINE # 247
0086 22                RET     
             ; FUNCTION _Hex_2_Ascii (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    822    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =    289      81
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.51   MAIN                                                                  07/23/2015 11:25:42 PAGE 15  

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
